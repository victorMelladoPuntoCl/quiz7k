/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/state.js */ \"./src/js/state.js\");\n/* harmony import */ var _js_quizdata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/quizdata.js */ \"./src/js/quizdata.js\");\n/* harmony import */ var _js_slideControl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/slideControl.js */ \"./src/js/slideControl.js\");\n/* harmony import */ var _js_buildQuiz_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/buildQuiz.js */ \"./src/js/buildQuiz.js\");\n/* harmony import */ var _js_progressTracking_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js/progressTracking.js */ \"./src/js/progressTracking.js\");\n\r\n //contenido del cuestionario.\r\n\r\n\r\n\r\n\r\n// Inicialización\r\n\r\nlet currentPosition = (0,_js_state_js__WEBPACK_IMPORTED_MODULE_0__.getState)().currentPosition;;\r\n\r\n//Slider y su navegación :D\r\nconst slider = document.querySelector('.slider');\r\nconst prevButton = document.getElementById('prev');\r\nconst nextButton = document.getElementById('next');\r\nconst continueButton = document.getElementById('continueButton');\r\n\r\n//reset \r\n//quitar todas las clases 'correct', 'incorrect' e 'incorrect-unchecked' que pueda haber en cualquier elemento del quiz\r\n//obtener todos los elementos li de la página\r\n\r\nfunction resetQuiz() {\r\n    let liElements = document.querySelectorAll('li');\r\n    liElements.forEach(liElement => {\r\n        liElement.classList.remove('correct');\r\n        liElement.classList.remove('incorrect');\r\n        liElement.classList.remove('incorrect-unchecked');\r\n    }\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nconsole.log(\"Documento cargado\");\r\n    \r\n//Navegación\r\n\r\n//Botón continuar, continúa:\r\n    continueButton.addEventListener('click', function() {\r\n        currentPosition = (0,_js_slideControl_js__WEBPACK_IMPORTED_MODULE_2__.nextSlide)(_js_quizdata_js__WEBPACK_IMPORTED_MODULE_1__.myQuestions, currentPosition, slider);\r\n        document.querySelector('.feedback').classList.add('hidden');\r\n        document.querySelector('.question-'+currentPosition).classList.add('active');\r\n        console.log(\"nextSlide terminado. currentPosition : \"+currentPosition);\r\n        let state = (0,_js_state_js__WEBPACK_IMPORTED_MODULE_0__.getState)();\r\n        state.currentPosition = currentPosition;\r\n        (0,_js_state_js__WEBPACK_IMPORTED_MODULE_0__.setState)(state);\r\n\r\n\r\n\r\n    });\r\n\r\n    //Estos son de debug, hay que borrarlos.\r\n    nextButton.addEventListener('click', function() {\r\n        currentPosition = (0,_js_slideControl_js__WEBPACK_IMPORTED_MODULE_2__.nextSlide)(_js_quizdata_js__WEBPACK_IMPORTED_MODULE_1__.myQuestions, currentPosition, slider);\r\n        console.log(\"nextSlide terminado. currentPosition : \"+currentPosition);\r\n    });\r\n\r\n    prevButton.addEventListener('click', function() {\r\n        currentPosition = (0,_js_slideControl_js__WEBPACK_IMPORTED_MODULE_2__.prevSlide)(_js_quizdata_js__WEBPACK_IMPORTED_MODULE_1__.myQuestions, currentPosition, slider);\r\n        console.log(\"nextSlide terminado. currentPosition : \"+ currentPosition);\r\n    });\r\n\r\n\r\n    //Inicializar\r\n\r\n    (0,_js_buildQuiz_js__WEBPACK_IMPORTED_MODULE_3__.buildQuiz)(_js_quizdata_js__WEBPACK_IMPORTED_MODULE_1__.myQuestions, slider); //y eso, comenzar a construir todo.\r\n    (0,_js_progressTracking_js__WEBPACK_IMPORTED_MODULE_4__.buildProgressTracking)(_js_quizdata_js__WEBPACK_IMPORTED_MODULE_1__.myQuestions); // construir la barra de progreso.\r\n    (0,_js_state_js__WEBPACK_IMPORTED_MODULE_0__.registerStateListener)(_js_progressTracking_js__WEBPACK_IMPORTED_MODULE_4__.updateProgressWithResults);\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://quiz/./src/index.js?");

/***/ }),

/***/ "./src/js/buildQuiz.js":
/*!*****************************!*\
  !*** ./src/js/buildQuiz.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildQuiz: () => (/* binding */ buildQuiz),\n/* harmony export */   registerBuildQuizListener: () => (/* binding */ registerBuildQuizListener)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"./src/js/state.js\");\n/* harmony import */ var _quizTemplates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quizTemplates.js */ \"./src/js/quizTemplates.js\");\n/* harmony import */ var _checkAnswers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./checkAnswers.js */ \"./src/js/checkAnswers.js\");\n\r\n\r\n\r\n\r\n/**\r\n * Construye y muestra las preguntas en forma de slides en el documento HTML.\r\n * @param {Array} myQuestions - Un array de objetos que representan las preguntas y sus opciones de respuesta.\r\n * @param {HTMLElement} container - Un elemento del DOM que contiene el slider.\r\n */\r\n\r\nfunction buildQuiz(myQuestions, slider) {\r\n    \r\n    console.log(\"myQuestions.length = \"+myQuestions.length);\r\n    \r\n    let state = (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.getState)();\r\n    let totalQuizQuestions = 0; //totalQuestionSlides\r\n    \r\n\r\n    //Inicializar\r\n    //recorrer el objeto\r\n    myQuestions.forEach(function(question,index){\r\n        \r\n        \r\n        let newSlide = document.createElement(\"div\"); // crear slide\r\n        newSlide.className = 'slide '+'question-'+index; // añadirle un className 'slide question+N'\r\n        newSlide.setAttribute('data-slide', index); // añadirle además un data-slide = N (estamos un poco redundantes no?)\r\n        \r\n\r\n        switch(question.questionType){\r\n            case (\"multiple-choice\"):\r\n                newSlide.innerHTML = (0,_quizTemplates_js__WEBPACK_IMPORTED_MODULE_1__.tp_multipleChoice)({ question, index }); // añadirle el template de la pregunta\r\n                totalQuizQuestions = totalQuizQuestions + 1;\r\n                break;\r\n                \r\n            case (\"single-choice\"):\r\n                newSlide.innerHTML = (0,_quizTemplates_js__WEBPACK_IMPORTED_MODULE_1__.tp_multipleChoice)({ question, index }); // añadirle el template de la pregunta\r\n                totalQuizQuestions = totalQuizQuestions + 1;\r\n                break;\r\n\r\n            case (\"feedback-slide\"):\r\n                newSlide.innerHTML = (0,_quizTemplates_js__WEBPACK_IMPORTED_MODULE_1__.tp_feedbackSlide)(state); // añadirle el template de la pregunta\r\n                break;\r\n            \r\n            default:\r\n                console.log(\"Error: no se reconoce el tipo de pregunta.\");\r\n                break;\r\n        }\r\n\r\n        console.log(\"totalQuizQuestions = \"+totalQuizQuestions);\r\n        state.totalQuizQuestions = totalQuizQuestions;\r\n        (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.setState)(state);\r\n        slider.appendChild(newSlide); // añadirlo al slider\r\n\r\n\r\n    }); //termina forEach\r\n\r\n\r\n        // Agrega un controlador de eventos a todos los formularios generados\r\n        const forms = document.querySelectorAll('.question-options');\r\n        \r\n        forms.forEach((form, key) => {\r\n            form.addEventListener('submit', function(event) { // Listener al submit del form (cada pregunta es un form)\r\n                event.preventDefault(); // Bloquea el refresco de página.\r\n\r\n                const userAnswers = Array.from(form.querySelectorAll('input:checked')).map(input => input.value); // Genera un Array con las respuestas en estado checked.                \r\n                console.log('userAnswers = '+userAnswers);              \r\n                let correctQuestionAnswers = myQuestions[key].correctAnswers;\r\n                //Enviar el formulario de esta iteración a chequear.\r\n                (0,_checkAnswers_js__WEBPACK_IMPORTED_MODULE_2__.checkAnswers)(event.target, myQuestions, userAnswers, key, correctQuestionAnswers ); // Llama a la función que comprueba las respuestas.\r\n            });\r\n        });\r\n}\r\n\r\nfunction registerBuildQuizListener(listener) {\r\n    (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.registerStateListener)(listener); // Aquí simplemente reutilizamos la función de registro del estado\r\n}\r\n\r\n\n\n//# sourceURL=webpack://quiz/./src/js/buildQuiz.js?");

/***/ }),

/***/ "./src/js/checkAnswers.js":
/*!********************************!*\
  !*** ./src/js/checkAnswers.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAnswers: () => (/* binding */ checkAnswers)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"./src/js/state.js\");\n\r\n\r\n\r\n//Función que recibe un array de respuestas, un array de respuestas correctas y devuelve un objeto con las respuestas correctas, \r\n//incorrectas y el resultado de la pregunta.\r\n\r\n\r\n/**\r\n * checkAnswers\r\n * @param {HTMLFormElement} formHTML //Formulario sobre el que se muestra feedback posterior.\r\n * @param {Object} myQuestions \r\n * @param {array} userAnswers \r\n * @param {int} key  //posición del array de preguntas que se está corrigiendo.\r\n * @param {array} correctQuestionAnswers \r\n * @returns resultado de la pregunta\r\n */\r\nfunction checkAnswers(formHTML, myQuestions, userAnswers, key, correctQuestionAnswers) { //eliminado currentPosition, lo pediremos al evento que lo generó.\r\n    //Arma el objeto con los resultados\r\n    let correct = []; //guarda las opciones marcadas correctas para el feedback posterior.\r\n    let incorrect = []; //guarda las opciones marcadas incorrectas para el feedback posterior.\r\n    let questionResult = '';\r\n    let questionID = myQuestions[key].questionID;\r\n    let questionKey = key;\r\n    let state = (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.getState)();\r\n\r\n    let score = state.score;\r\n \r\n\r\n\r\n    // Marcar los botones de pregunta según corresponda (correcto/incorrecto)\r\n    // Recorremos el formulario para obtener los valores de los inputs\r\n    //Si no hay ningún input checked, no correr el forEach y enviar una alert\r\n    \r\n    if (userAnswers.length===0) {\r\n        alert('Por favor elija una opción');\r\n        return;\r\n    } else {\r\n\r\n        let allOptions = (Object.keys(myQuestions[key].answers)); //obtener todas las opciones de la pregunta actual. \r\n        allOptions.sort(); //ordenar las respuestas de la pregunta actual.\r\n        userAnswers.sort(); //ordenar las respuestas del usuario.\r\n        correctQuestionAnswers.sort(); //ordenar las respuestas correctas de la pregunta actual.\r\n\r\n        //Obtener el resultado general de la pregunta, \r\n        //comparando userAnswers con correctQuestionAnswers.\r\n        //si son exactamente iguales, questionResult es correct.\r\n        //si no es así, questionResult es incorrect.\r\n        if (JSON.stringify(userAnswers) === JSON.stringify(correctQuestionAnswers)) {\r\n            questionResult = 'correct';\r\n            state.score++;\r\n        }\r\n        else {\r\n            questionResult = 'incorrect';\r\n        }\r\n        state.results.push(questionResult); //añadir un 'correct' o 'incorrect' al array de resultados.\r\n\r\n        //Recorrer el array de respuestas del usuario y poblar los arrays de alternativas correctas e incorrectas.\r\n        userAnswers.forEach(answer => {\r\n            if (correctQuestionAnswers.includes(answer)) {\r\n                correct.push(answer);\r\n            } else {\r\n                incorrect.push(answer);\r\n            };\r\n        })\r\n    \r\n    } //fin else.\r\n\r\n        \r\n        let questionresultDetails= {\r\n            questionID,\r\n            questionKey,\r\n            userAnswers,\r\n            score,\r\n            correctQuestionAnswers,\r\n            correct,\r\n            incorrect,\r\n            questionResult\r\n        };\r\n\r\n    \r\n\r\n    //guardar todos los cambios en el state.\r\n    (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.setState)(state);\r\n\r\n\r\n    //enviar el detalle de las respuestas a showFeedback para mostrarlas y mostrar la pantalla de resultado de la pregunta\r\n    showFeedback(questionresultDetails);\r\n\r\nreturn questionresultDetails;\r\n}\r\n\r\n/**\r\n * Se hace cargo de mostrar al usuario el feedback de la pregunta y habilitarlo para continuar.\r\n * @param {Object} resultDetailsObject \r\n */\r\n\r\nfunction showFeedback(resultDetailsObject) {\r\n\r\n    let result = resultDetailsObject; //objeto con los detalles de la pregunta y sus resultados.\r\n\r\n    //recuperar el formulario de la pregunta actual\r\n    let key= resultDetailsObject.questionKey;\r\n    let form = document.getElementById(resultDetailsObject.questionKey);\r\n    \r\n    //Mostrar la ventana de feedback\r\n    let feedback = document.querySelector('.feedback');\r\n    feedback.classList.remove('hidden'); //mostrar la ventana de feedback\r\n    feedback.classList.add('animate__animated', 'animate__bounceIn');\r\n\r\n    if (result.questionResult === 'correct') {\r\n           feedback.querySelector('.feedback-text').textContent = \"¡Excelente!\"\r\n    } else {\r\n        feedback.querySelector('.feedback-text').textContent = \"Tienes respuestas incorrectas, te recomendamos revisar el contenido y reintentar.\";\r\n    }\r\n\r\n   \r\n    //obtener un array con todas las respuestas correctas del usuario, desde el objeto result\r\n    // añadir a cada opción la class 'correct' si coincide con alguno de los elementos de correctAnswers\r\n\r\n    let options = form.querySelectorAll('ul input'); //array con todos los elementos del form\r\n    let correctQuestionAnswers = resultDetailsObject.correctQuestionAnswers; // array con todas las respuestas correctas de la pregunta actual.\r\n    let correctAnswers = resultDetailsObject.correct; // array con todas las respuestas correctas del usuario\r\n    let incorrectAnswers = resultDetailsObject.incorrect; // array con todas las respuestas incorrectas del usuario\r\n\r\n    //recorrer todas las options de la pregunta\r\n    console.log (correctAnswers);\r\n    options.forEach(option => {\r\n        \r\n        //si la opción está en correctAnswers, añadir la class 'correct'\r\n        if (option.checked && correctAnswers.includes(option.value)) {\r\n            option.classList.add('correct');\r\n        }\r\n\r\n        //si la opción está en incorrectAnswers, añadir la class 'incorrect'\r\n        if (option.checked && incorrectAnswers.includes(option.value)) {\r\n            option.classList.add('incorrect');\r\n        \r\n        } \r\n        //si la opción no está marcada, pero está en correctAnswers, añadir la clase 'incorrect-unchecked'\r\n        if (option.checked == false && correctQuestionAnswers.includes(option.value)){\r\n            console.log(\"faltó marcar: \"+option.value);\r\n            option.classList.add('incorrect-unchecked');\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://quiz/./src/js/checkAnswers.js?");

/***/ }),

/***/ "./src/js/progressTracking.js":
/*!************************************!*\
  !*** ./src/js/progressTracking.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildProgressTracking: () => (/* binding */ buildProgressTracking),\n/* harmony export */   updateProgress: () => (/* binding */ updateProgress),\n/* harmony export */   updateProgressWithResults: () => (/* binding */ updateProgressWithResults)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"./src/js/state.js\");\n\r\n\r\n// Función que construye dentro del ul .progressbar los li en base a la cantidad de preguntas en myQuestions\r\nconst buildProgressTracking = (myQuestions) => {\r\n    \r\n    //construir un li por cada pregunta en myQuestions con un forEach\r\n    myQuestions.forEach((question) => {\r\n        \r\n        if (question.questionType != \"feedback-slide\") { //ignorar en la cuenta los elementos \"feedback-slide\"\r\n            const li = document.createElement(\"li\");\r\n            li.classList.add(\"step\");\r\n            document.querySelector(\".progressbar\").appendChild(li);\r\n        }\r\n        \r\n    }\r\n)\r\n}\r\n\r\n    //función que actualiza la clase active de los li en base a la posición actual de la pregunta\r\n    const updateProgress = (currentPosition) => {\r\n        const steps = document.querySelectorAll(\".step\");\r\n        steps.forEach((step, index) => {\r\n            if (index < currentPosition) {\r\n                step.classList.add(\"active\");\r\n            } else {\r\n                step.classList.remove(\"active\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //función que actualiza las clases de los li en base al estado de las preguntas en getState.results\r\n    const updateProgressWithResults = () => {\r\n       \r\n        const steps = document.querySelectorAll(\".step\");\r\n        steps.forEach((step, index) => {\r\n            const result = (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.getState)().results[index];\r\n            \r\n            if (result) {\r\n                step.classList.add(result);\r\n            }\r\n           \r\n        });\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://quiz/./src/js/progressTracking.js?");

/***/ }),

/***/ "./src/js/quizTemplates.js":
/*!*********************************!*\
  !*** ./src/js/quizTemplates.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tp_feedbackSlide: () => (/* binding */ tp_feedbackSlide),\n/* harmony export */   tp_multipleChoice: () => (/* binding */ tp_multipleChoice)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"./src/js/state.js\");\n\r\n\r\nconst tp_multipleChoice = ({ question, index }) => `\r\n<div class=\"sup\"><h2>${question.question}</h2></div>\r\n<div class=\"quiz-form-container\">\r\n</div>\r\n    <form id=\"${index}\" class=\"question-options\">\r\n        \r\n        <span class=\"deco-top\"></span>\r\n        <ul>\r\n        \r\n            ${Object.entries(question.answers).map(([key, answer]) => `\r\n                <li><label for=\"${index}-${key}\" class=\"option\">\r\n                    <input type=\"${question.questionType === 'single-choice' ? 'radio\" name=\"group-question-'+question.questionID : 'checkbox'}\" id=\"${index}-${key}\" value=\"${key}\" group=\"\">\r\n                    <p>${answer}</p>\r\n                    </label>\r\n                </li>\r\n            `).join('')}\r\n        </ul>\r\n\r\n        <input type=\"hidden\" name=\"questionID\" value=\"${index}\" class=\"questionID\">\r\n        <input type=\"hidden\" name=\"questionIndex\" value=\"${index}\" class=\"questionIndex\">\r\n        <div class=\"questionFt\">\r\n        <button type=\"submit\" class=\"submitButton main-button\">COMPROBAR</button>\r\n        </div>\r\n    </form>\r\n`;\r\n\r\n/**\r\n * \r\n * @returns HTML Pantalla de resultado final.\r\n */\r\n\r\nconst tp_feedbackSlide = function(state){\r\n\r\n    function updateFeedbackSlide(state){\r\n\r\n        let totalQuizQuestions = state.totalQuizQuestions;\r\n        let score = state.score;\r\n        let message = '';\r\n\r\n        if (totalQuizQuestions==score){\r\n            message='¡Muy bien!'; \r\n        } else{\r\n            message='¡Vuelve a intentarlo!';\r\n        };\r\n    \r\n        let HTMLContent = `\r\n        <div class=\"sup\">\r\n        <h2 class=''>Tu resultado:</h2>\r\n        <h2 class='quiz-result'>Preguntas totales:${totalQuizQuestions}</h2>\r\n        <h2 class='quiz-result'>Respuestas correctas: ${score}<h2>\r\n        <h2 class='quiz-result-text'>${message}</h2>\r\n        <button class=\"main-button\" onclick=\"location.reload()\">REINICIAR</button>\r\n        </div>\r\n        `;\r\n        console.log(HTMLContent);\r\n        return HTMLContent;\r\n        \r\n    }\r\n\r\n    (0,_state_js__WEBPACK_IMPORTED_MODULE_0__.registerStateListener) (updateFeedbackSlide); //devuelve cada vez que hay un set.\r\n    \r\n\r\nreturn updateFeedbackSlide(state); //devuelve por primera vez.\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://quiz/./src/js/quizTemplates.js?");

/***/ }),

/***/ "./src/js/quizdata.js":
/*!****************************!*\
  !*** ./src/js/quizdata.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   myQuestions: () => (/* binding */ myQuestions)\n/* harmony export */ });\nconst myQuestions = [\r\n    {\r\n        \"questionID\": \"1\",\r\n        \"trackProgress\": [1],\r\n        \"questionType\": \"multiple-choice\",\r\n        \"question\": \"¿Cuál de las siguientes alternativas son las contraindicaciones en la Reflexología?\",\r\n        \"answers\": {\r\n            \"a\": \"Durante el embarazo\",\r\n            \"b\": \"En caso de hongos, heridas o cualquier tipo de erupción\",\r\n            \"c\": \"En enfermedades en estado febril elevado\",\r\n            \"d\": \"Parálisis\"\r\n        },\r\n        \"correctAnswers\": [\"b\", \"c\"]\r\n    },\r\n    {\r\n        \"questionID\": \"2\",\r\n        \"trackProgress\": [1],\r\n        \"questionType\": \"multiple-choice\",\r\n        \"question\": \"¿La Reflexología que enseñamos no es más que…?\",\r\n        \"answers\": {\r\n          \"a\": \"Una terapia complementaria a las indicaciones del médico\",\r\n          \"b\": \"Es una alternativa a la automedicación\",\r\n          \"c\": \"Trabajamos con la homeostasis\",\r\n          \"d\": \"Tiene un efecto benéfico sobre todas las partes del cuerpo\"\r\n        },\r\n        \"correctAnswers\": [\"c\", \"d\"]\r\n      },\r\n      {\r\n        \"questionID\": \"3\",\r\n        \"trackProgress\": [1],\r\n        \"questionType\": \"single-choice\",\r\n        \"question\": \"Unos de los personajes más influyentes en La Historia de la reflexología a nivel occidental fue:\",\r\n        \"answers\": {\r\n          \"a\": \"Edwin Bowers\",\r\n          \"b\": \"Joseph Shelvy\",\r\n          \"c\": \"Dwight Byers\",\r\n          \"d\": \"Fitzgerald\"\r\n        },\r\n        \"correctAnswers\": [\"d\"]\r\n      },\r\n      {\r\n        \"questionID\": \"3\",\r\n        \"trackProgress\": [1],\r\n        \"questionType\": \"single-choice\",\r\n        \"question\": \"Unos de los personajes más influyentes en La Historia de la reflexología a nivel occidental fue:\",\r\n        \"answers\": {\r\n          \"a\": \"Edwin Bowers\",\r\n          \"b\": \"Joseph Shelvy\",\r\n          \"c\": \"Dwight Byers\",\r\n          \"d\": \"Fitzgerald\"\r\n        },\r\n        \"correctAnswers\": [\"d\"]\r\n      },\r\n      {\r\n        \"questionID\": \"3\",\r\n        \"trackProgress\": [1],\r\n        \"questionType\": \"single-choice\",\r\n        \"question\": \"Unos de los personajes más influyentes en La Historia de la reflexología a nivel occidental fue:\",\r\n        \"answers\": {\r\n          \"a\": \"Edwin Bowers\",\r\n          \"b\": \"Joseph Shelvy\",\r\n          \"c\": \"Dwight Byers\",\r\n          \"d\": \"Fitzgerald\"\r\n        },\r\n        \"correctAnswers\": [\"d\"]\r\n      },\r\n      {\r\n        \"questionID\": \"4\",\r\n        \"trackProgress\": [1],\r\n        \"questionType\": \"single-choice\",\r\n        \"question\": \"¿Cómo funciona la reflexología según la ciencia?\",\r\n        \"answers\": {\r\n          \"a\": \"Estímulo y respuesta a través de las terminaciones nerviosas\",\r\n          \"b\": \"La circulación sanguínea\",\r\n          \"c\": \"Estimulo de la piel\",\r\n          \"d\": \"Alternativa a y b\"\r\n        },\r\n        \"correctAnswers\": [\"a\"]\r\n      } ,   \r\n    {\r\n        questionID:\"6\",\r\n        trackProgress: [0],\r\n        questionType: \"feedback-slide\",\r\n        question: \"---\",\r\n        answers: {\r\n            a: \"-\",\r\n            b: \"-o\",\r\n            c: \"-\",\r\n            d: \"-\"\r\n        },\r\n        correctAnswers: [\"-\",\"-\"],\r\n        lastIntentCheck:{\r\n            correct: [\"-\",\"-\"],\r\n            incorrect: [],\r\n            questionResult: [\"--\"]\r\n        }\r\n\r\n    },\r\n    // Agrega más preguntas aquí\r\n];\r\n\r\n\r\n\n\n//# sourceURL=webpack://quiz/./src/js/quizdata.js?");

/***/ }),

/***/ "./src/js/slideControl.js":
/*!********************************!*\
  !*** ./src/js/slideControl.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   currentPosition: () => (/* binding */ currentPosition),\n/* harmony export */   nextSlide: () => (/* binding */ nextSlide),\n/* harmony export */   prevSlide: () => (/* binding */ prevSlide),\n/* harmony export */   updateSlide: () => (/* binding */ updateSlide)\n/* harmony export */ });\n\r\n//*AVANCE Y RETROCESO POR LOS SLIDES*//\r\n\r\n// Función para avanzar al siguiente slide\r\nfunction nextSlide(currentArray, currentPosition, slider) {\r\n    console.log('nextslide \\n currentArray.length = '+ currentArray.length);\r\n    console.log('currentPosition = '+ currentPosition);\r\n    console.log(currentPosition < currentArray.length - 1);\r\n    if (currentPosition < currentArray.length -1) {      \r\n        let newPosition = currentPosition + 1;\r\n        updateSlide(newPosition, currentArray, slider);\r\n        return (newPosition);\r\n    } else {\r\n        return (currentPosition);\r\n    }\r\n};\r\n\r\n// Función para retroceder al slide anterior\r\nfunction prevSlide(currentArray, currentPosition, slider) {\r\n    console.log(\"-----\"+currentPosition);\r\n    if (currentPosition > 0) {    \r\n        let newPosition = currentPosition - 1;\r\n        console.log(\"prevSlide | \"+ currentPosition+\" > \"+newPosition);\r\n        console.log('updateSlide newPosition: '+newPosition);\r\n        updateSlide(newPosition, currentArray, slider);   \r\n        return (newPosition);\r\n    } else{\r\n        return (currentPosition);\r\n    }\r\n    \r\n};\r\n\r\n// Función para actualizar la vista del slide\r\nfunction updateSlide(newPosition, currentArray,slider) { \r\n    slider.style.transform = `translateX(-${newPosition * 100}%)`;\r\n    console.log('updateSlide newPosition: '+newPosition);\r\n};\r\n\r\nlet currentPosition = 0;\r\n\r\n\n\n//# sourceURL=webpack://quiz/./src/js/slideControl.js?");

/***/ }),

/***/ "./src/js/state.js":
/*!*************************!*\
  !*** ./src/js/state.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getState: () => (/* binding */ getState),\n/* harmony export */   registerStateListener: () => (/* binding */ registerStateListener),\n/* harmony export */   setState: () => (/* binding */ setState)\n/* harmony export */ });\n  // Esto implementa el patrón Publicación/Suscripción (u Observer)\r\n  // para que los componentes puedan subscribirse a los cambios de estado\r\n  // y que estos cambios se propagen a todos los componentes\r\n  // que estén suscritos\r\n  // https://refactoring.guru/es/design-patterns/observer\r\n  // https://www.youtube.com/watch?v=OGzPm36IvQc\r\n  \r\n  // Por ejemplo, si un componente quiere saber si su estado ha cambiado,\r\n  // se debería suscribir a la función setState y luego, si el estado ha cambiado,\r\n  // se debería ejecutar la función callback que se le pasó al setState\r\n  // https://www.youtube.com/watch?v=OGzPm36IvQ\r\n\r\n\r\n// Inicializa el objeto state.\r\nlet state = {\r\n    currentScore: 0, //borrar\r\n    totalScore: 0, //borrar\r\n    totalQuizQuestions:0,\r\n    score:0,\r\n    results: [], // Aquí se guardará el resultado de cada pregunta, por ejemplo: [ \"correct\",\"incorrect\"]\r\n    currentPosition:0, // Posición actual dentro del quiz (pregunta actual). Parte del 0.\r\n    userAnswers:[], // Aquí se guardarán las respuestas del usuario. Parte del 0.\r\n  };\r\n  \r\n  const listeners = []; // Aquí se guardarán las funciones que se ejecutarán cuando se cambie el estado\r\n  \r\n//Métodos para obtener y actualizar el estado\r\n\r\n  const getState = () => state; // Aquí se devolverá el estado\r\n  \r\n  const setState = (newState) => { \r\n    state = { ...state, ...newState }; // Aquí se actualizará el estado (operador de ...)\r\n    listeners.forEach((listener) => listener(state)); // Aquí se ejecutarán las funciones que se suscribieron\r\n    console.log('setState : currentPosition:'+ state.currentPosition + ' -  score:' + state.score);\r\n  };\r\n \r\n  const registerStateListener = (listener) => {\r\n    listeners.push(listener);\r\n  };\r\n\r\n\r\n  \r\n  \n\n//# sourceURL=webpack://quiz/./src/js/state.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;